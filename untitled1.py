# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bB8fjmh1AnM_FPrtn3IU0ze1nczU6p2z
"""

!pip install telebot
import telebot
import nltk
from nltk.tokenize import word_tokenize

bot = telebot.TeleBot("5817157960:AAGgwq8k4dcGEchFTU-ZSyy2dxY5SDZVjTQ")

# состояния диалога
START, NAME, PIZZA_SIZE, PAYMENT, DELIVERY_ADDRESS, CONFIRMATION = range(6)
state = START

# переменные для хранения ответов пользователя
user_name = ""
pizza_size = ""
payment_type = ""
delivery_address = ""

# обработка сообщений ботом
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    global state, user_name, pizza_size, payment_type, delivery_address

    if state == START:
        # начало диалога - задаем первый вопрос
        bot.send_message(message.chat.id, "Как вас зовут?")
        state = NAME
    elif state == NAME:
        # получаем имя пользователя и задаем следующий вопрос
        user_name = message.text
        bot.send_message(message.chat.id, "Какую вы хотите пиццу? Большую, среднюю или маленькую?")
        state = PIZZA_SIZE
    elif state == PIZZA_SIZE:
        # получаем размер пиццы и задаем следующий вопрос
        pizza_size = message.text
        bot.send_message(message.chat.id, "Как вы будете платить?")
        state = PAYMENT
    elif state == PAYMENT:
        # получаем тип оплаты и задаем следующий вопрос
        payment_type = message.text
        bot.send_message(message.chat.id, "Какой у вас адрес доставки?")
        state = DELIVERY_ADDRESS
    elif state == DELIVERY_ADDRESS:
        # получаем адрес доставки и задаем следующий вопрос для подтверждения заказа
        delivery_address = message.text
        message_text = f"Вы хотите {pizza_size} пиццу, оплата – {payment_type}, доставить по адресу {delivery_address}?"
        bot.send_message(message.chat.id, message_text)
        state = CONFIRMATION
    elif state == CONFIRMATION:
        # получаем ответ пользователя на предыдущий вопрос и завершаем диалог
        if message.text.lower().startswith("да"):
            bot.send_message(message.chat.id, f"Спасибо за заказ, {user_name}!")
        else:
            bot.send_message(message.chat.id, "Отмена заказа.")

        # сбрасываем состояние диалога и переменные
        state = START
        user_name = ""
        pizza_size = ""
        payment_type = ""
        delivery_address = ""

# запуск бота
bot.polling()

import unittest
from unittest.mock import patch
from io import StringIO

class TestBot(unittest.TestCase):
    @patch('sys.stdout', new_callable=StringIO)
    def test_dialog(self, mock_stdout):
        # тестирование диалога
        with patch('builtins.input', side_effect=["Саша", "Большую", "Наличкой", "Улица Ленина 1", "Да"]):
            exec(open('bot.py').read())

        # проверка вывода в консоль
        self.assertIn("Вы хотите большую пиццу, оплата – наличкой, доставить по адресу Улица Ленина 1?", mock_stdout.getvalue())
        self.assertIn("Спасибо за заказ", mock_stdout.getvalue())